server.port=8080
#database
spring.datasource.url=jdbc:postgresql://localhost:5432/productsdb
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#Kafka
spring.kafka.producer.bootstrap-servers=localhost:9092,localhost:9094,localhost:9096
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.LongSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# all-> strongest durability guarantee, waits for an ack from all insync brokers
spring.kafka.producer.acks = all

##the number of times producer will try to send a message to kafka, if it fails to send it first time
spring.kafka.producer.retries=10
##intervals- wait 1000 ms before send again message
spring.kafka.producer.properties.retry.backoff.ms =1000

#recomanded in documentation
spring.kafka.producer.properties.delivery.timeout.ms = 120000
#delivery.timeout>= than sum of below properties
#linger- max time producer will wait and buffer data before sending a batch of messages
spring.kafka.producer.properties.linger.ms=0
spring.kafka.producer.properties.request.timeout.ms=30000

auto.create.topics.enable = true